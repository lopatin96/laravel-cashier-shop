<?php

namespace Atin\LaravelCashierShop\Services\PriceCalculationStrategy;

use App\Models\User;
use Atin\LaravelCashierShop\Enums\CurrencyDecimalType;
use Atin\LaravelCashierShop\Models\Product;

class BasePriceCalculationStrategy implements PriceCalculationStrategy
{
    static array $exchangeRatesForUsd = [
        'AED' => 3.67,
        'AFN' => 68.25,
        'ALL' => 93.25,
        'AMD' => 388.47,
        'ANG' => 1.8,
        'AOA' => 913,
        'ARS' => 1003.74,
        'AUD' => 1.53,
        'AWG' => 1.8,
        'AZN' => 1.7,
        'BAM' => 1.86,
        'BBD' => 2.02,
        'BDT' => 119.49,
        'BGN' => 1.86,
        'BIF' => 2953.51,
        'BMD' => 1,
        'BND' => 1.34,
        'BOB' => 6.9,
        'BRL' => 5.82,
        'BSD' => 1,
        'BWP' => 13.65,
        'BYN' => 3.27,
        'BZD' => 2.01,
        'CAD' => 1.40,
        'CDF' => 2852.11,
        'CHF' => 0.88,
        'CLP' => 972.5,
        'CNY' => 7.24,
        'COP' => 4386.25,
        'CRC' => 507.94,
        'CVE' => 104.81,
        'CZK' => 24.06,
        'DJF' => 177.97,
        'DKK' => 7.09,
        'DOP' => 60.25,
        'DZD' => 133.59,
        'EGP' => 49.68,
        'ETB' => 124.61,
        'EUR' => 0.95,
        'FJD' => 2.27,
        'FKP' => 0.79,
        'GBP' => 0.78,
        'GEL' => 2.73,
        'GIP' => 0.79,
        'GMD' => 70.15,
        'GNF' => 8.58,
        'GTQ' => 7.66,
        'GYD' => 209.05,
        'HKD' => 7.76,
        'HNL' => 24.97,
        'HTG' => 131.55,
        'HUF' => 387.18,
        'IDR' => 15793.75,
        'ILS' => 3.72,
        'INR' => 84.01,
        'ISK' => 137,
        'JMD' => 158.57,
        'JPY' => 154,
        'KES' => 129.34,
        'KGS' => 86.49,
        'KHR' => 4044.52,
        'KMF' => 465.69,
        'KRW' => 1392,
        'KYD' => 0.8334,
        'KZT' => 495.86,
        'LAK' => 21901.2,
        'LBP' => 89550.93,
        'LKR' => 290.91,
        'LRD' => 181.1,
        'MAD' => 10,
        'MDL' => 18.22,
        'MGA' => 4682.26,
        'MKD' => 58.43,
        'MMK' => 2103,
        'MNT' => 3398,
        'MOP' => 8.02,
        'MUR' => 46.4,
        'MVR' => 15.46,
        'MWK' => 1733.93,
        'MXN' => 20.35,
        'MYR' => 4.45,
        'MZN' => 63.95,
        'NAD' => 18.09,
        'NGN' => 1680.93,
        'NIO' => 36.79,
        'NOK' => 11.06,
        'NPR' => 135.16,
        'NZD' => 1.7,
        'PAB' => 1,
        'PEN' => 3.8,
        'PGK' => 4.03,
        'PHP' => 58.97,
        'PKR' => 277.93,
        'PLN' => 4.13,
        'PYG' => 7848.15,
        'QAR' => 3.65,
        'RON' => 4.73,
        'RSD' => 111.17,
        'RUB' => 101.09,
        'RWF' => 1373.98,
        'SAR' => 3.75,
        'SBD' => 8.35,
        'SCR' => 14.04,
        'SEK' => 11.03,
        'SGD' => 1.34,
        'SHP' => 0.79,
        'SLE' => 22.57,
        'SOS' => 568.92,
        'SRD' => 35.43,
        'STD' => 1.34,
        'SZL' => 18.1,
        'THB' => 34.66,
        'TJS' => 10.65,
        'TOP' => 2.39,
        'TRY' => 34.48,
        'TTD' => 6.78,
        'TWD' => 32.54,
        'TZS' => 2649.1,
        'UAH' => 41.28,
        'UGX' => 3694.53,
        'UYU' => 42.6,
        'UZS' => 12855.34,
        'VND' => 25422.52,
        'VUV' => 118.72,
        'WST' => 2.74,
        'XAF' => 623.5,
        'XCD' => 2.7,
        'XOF' => 623.48,
        'XPF' => 113.35,
        'YER' => 249.92,
        'ZAR' => 18,
        'ZMW' => 27.57,
    ];

    public function getPrice(Product $product, User $user): int
    {
        if (is_null($user->country) || $user->country === 'us') {
            return $product->base_price;
        }

        $currency = $user->getCurrency();

        $amount = $product->base_price * static::$exchangeRatesForUsd[$currency->iso_code];

        if ($currency->decimal_type === CurrencyDecimalType::TWO_DECIMAL) {
            $amount = ceil($amount / 100) * 100;
        }

        return max($amount, $currency->min_charge_amount);
    }
}